<Window x:Class="LabBook.Forms.Composition.CompositionForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LabBook.Forms.Composition"
        xmlns:localOut="clr-namespace:LabBook.Forms.MainForm"
        xmlns:mv="clr-namespace:LabBook.Forms.Composition.ModelView"
        xmlns:Convertors="clr-namespace:LabBook.Forms.MainForm.Converters"
        xmlns:ConvertorsLocal="clr-namespace:LabBook.Forms.Composition.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        ResizeMode="CanResize"
        Title="Skład receptury"
        Height="{Binding FormHeight, Mode=TwoWay}" 
        Width="{Binding FormWidth, Mode=TwoWay}"
        Top="{Binding FormYpos, Mode=TwoWay}" 
        Left="{Binding FormXpos, Mode=TwoWay}"
        WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <mv:CompositionFormMV/>
    </Window.DataContext>
    
    
    <i:Interaction.Triggers>
        <!-- Closing Form event -->
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Convertors:DataGridLenghtToDoubleConverter x:Key="LengthToDoubleConverter" />
        <Convertors:DotConverter x:Key="DecimalConverter" />
        <Convertors:BoolToHiddenConverter x:Key="BoolToHiddenConverter" />
        <ConvertorsLocal:StartEndToThicknesConverter x:Key="BorderThicknesConverter" />
        <ConvertorsLocal:StartEndToBackColorConverter x:Key="BackColorConverter" />
        <ConvertorsLocal:StartEndBorderColorConverter x:Key="BorderColorConverter" />
        <ConvertorsLocal:LeftPositionConverter x:Key="LeftPositionConverter" />
        <ConvertorsLocal:MassRoundConverter x:Key="MassRoundConverter" />
        <ConvertorsLocal:VocRoundConverter x:Key="VocRoundConverter" />
        <localOut:BindingProxy x:Key="proxy" Data="{Binding}" />

        <Style x:Key="AllignCellLeft" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5 0 0 0" />
        </Style>
        <Style x:Key="AllignColmnHeaderLeft" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignColmnHeaderCenter" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignCellCenter" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="AllignCellContentCenter" TargetType="DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridTextLeftStyle" TargetType="TextBlock" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="3,0,0,0" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <Style x:Key="DataGridTextCenterStyle" TargetType="TextBlock" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
    </Window.Resources>
    
    <DockPanel>
        <!-- Menu -->
        <Ribbon DockPanel.Dock="Top" FontWeight="Bold" FontSize="14" >
            <RibbonTab Header="Skład" >
                <RibbonGroup Header="Operacje"  FontSize="10" >

                </RibbonGroup>
                <RibbonGroup Header="Dodawanie"  FontSize="10">
                    
                </RibbonGroup>
                <RibbonGroup Header="Obliczenia" FontSize="10">

                </RibbonGroup>
            </RibbonTab>
        </Ribbon>

        <Grid Margin="1,1,1,1" Background="#FFE5E5E5" >
            <Rectangle Grid.Row="2" Grid.ColumnSpan="2" Stroke="#FFAEAEA9" StrokeThickness="2"
                       Height="28" VerticalAlignment="Top"/>
            <Label HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,1,0,0" FontWeight="Bold" FontSize="12"  
                   Content="{Binding GetTitle, Mode=OneWay}"/>

            <!-- Setting values for recipes -->
            <Canvas x:Name="CanvasFilterData" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,36,0,0" Height="30">
                
                <!-- Combo with material list -->
                <ComboBox x:Name="CmbMaterial"
                          IsEnabled="true"
                          IsTextSearchEnabled="True"
                          DisplayMemberPath="name" 
                          SelectedValuePath="name"
                          Canvas.Top="4"
                          Width="{Binding ElementName=ColMaterial, Path=ActualWidth}"
                          ItemsSource="{Binding GetMatrials}" 
                          SelectedValue="{Binding SelectedItem.Name, ElementName=DgMaterials, Mode=TwoWay}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="cmbMaterial">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </ComboBox>
                
                <!-- TextBox with % amount -->
                <TextBox x:Name="TxtAmount" TextWrapping="Wrap" FontWeight="Bold" Padding="0,3,0,0"
                         IsEnabled="true" KeyUp="TxtBox_KeyUp"
                         Height="22"
                         Canvas.Top="4"
                         Width="{Binding ElementName=ColAmountPr, Path=ActualWidth}"
                         Text="{Binding SelectedItem.Amount, ElementName=DgMaterials, Mode=TwoWay, Converter={StaticResource DecimalConverter} }" 
                         Visibility="{Binding AmountMode, Converter={StaticResource BoolToHiddenConverter}}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtAmount">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>
                
                <!-- TextBox with mass amount -->
                <TextBox x:Name="TxtMass" TextWrapping="Wrap" FontWeight="Bold" Padding="0,3,0,0"
                         IsEnabled="true" KeyUp="TxtBox_KeyUp"
                         Height="22"
                         Canvas.Top="4"
                         Width="{Binding ElementName=ColAmountMass, Path=ActualWidth}"
                         Text="{Binding SelectedItem.Mass, ElementName=DgMaterials, Mode=TwoWay, Converter={StaticResource DecimalConverter} }" 
                         Visibility="{Binding MassMode, Converter={StaticResource BoolToHiddenConverter}}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtMass">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>

                <!-- RadioButton to set by amount -->
                <RadioButton x:Name="RdMaterial" Content="Ilość" FontWeight="Bold" GroupName="Amonut"
                             Canvas.Top="8"
                             IsChecked="{Binding AmountMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="rdAmount">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </RadioButton>

                <!-- RadioButton to set by mass -->
                <RadioButton x:Name="RdSemiproduct" Content="Masa" FontWeight="Bold" GroupName="Amonut"
                             Canvas.Top="8"
                             IsChecked="{Binding MassMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="rdMass">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </RadioButton>

                <!-- TxtComment to set comments -->
                <TextBox x:Name="TxtComment" TextWrapping="Wrap" FontWeight="Bold" Padding="0,3,0,0"
                         IsEnabled="true"
                         Height="22"
                         Canvas.Top="4"
                         Width="{Binding ElementName=ColComment, Path=ActualWidth}"
                         Text="{Binding SelectedItem.Comment, ElementName=DgMaterials, Mode=TwoWay, Converter={StaticResource DecimalConverter} }" 
                         KeyUp="TxtBox_KeyUp" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtVoc">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>

            </Canvas>


            <DataGrid x:Name="DgMaterials" Margin="2,70,2,40"  HorizontalAlignment="Stretch" AutoGenerateColumns="False" 
                      ColumnWidth="*" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True"
                      CanUserAddRows="False"  CanUserResizeColumns="True" CanUserResizeRows="False" RowHeight="22"
                      FrozenColumnCount="1" HeadersVisibility="Column" 
                      ItemsSource="{Binding Recipe}" >
                
                <DataGrid.Columns>

                    <DataGridTextColumn x:Name="ColSemiProd" Binding="{Binding IsSemiProduct}" Visibility="Collapsed" />
                    <DataGridTextColumn x:Name="ColOperation" Binding="{Binding Operation}" Visibility="Collapsed" />

                    <DataGridTemplateColumn x:Name="ColStatus" IsReadOnly="True" CanUserSort="False" CanUserResize="False"
                                            HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                            Width="32">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <StackPanel Background="#FFE5E5E5" >
                                    <Image x:Name="ArrowRight" Width="18" Height="16" Margin="1,1,1,1" Source="/Img/arrow-right.png" 
                                           Visibility="Hidden">
                                    </Image>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" >
                                        <Setter TargetName="ArrowRight" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <!-- Column L.P. -->
                    <DataGridTextColumn x:Name="ColLP" IsReadOnly="True"
                                        Header="L.P."
                                        Binding="{Binding Ordering, Mode=OneWay}"
                                        Width="10*"
                                        HeaderStyle="{StaticResource AllignColmnHeaderCenter}" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" >
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                               <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="left">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>

                                <!-- Another possibility to chahge color and thickness of GridCell, depends from another rules
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Operation}" Value="2"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFFFF700" />
                                        <Setter Property="BorderBrush" Value="Blue" />
                                        <Setter Property="BorderThickness" Value="2,2,0,0" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Operation}" Value="3"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFFFF700" />
                                        <Setter Property="BorderBrush" Value="Blue" />
                                        <Setter Property="BorderThickness" Value="2,0,0,0" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Operation}" Value="4"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFFFF700" />
                                        <Setter Property="BorderBrush" Value="Blue" />
                                        <Setter Property="BorderThickness" Value="2,0,0,2" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                                -->
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column material name -->
                    <DataGridTextColumn x:Name="ColMaterial" IsReadOnly="True"
                                        Header="Surowiec"
                                        Binding="{Binding Name, Mode=OneWay}"
                                        Width="50*"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column amount in % -->
                    <DataGridTextColumn x:Name="ColAmountPr" IsReadOnly="True"
                                        Header="Ilość [%]"
                                        Binding="{Binding Amount, Mode=OneWay}"
                                        Width="20*"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column amount in kg -->
                    <DataGridTextColumn x:Name="ColAmountMass" IsReadOnly="True"
                                        Header="Masa [kg]"
                                        Width="20*"
                                        Binding="{Binding Mass, Converter={StaticResource MassRoundConverter}, Mode=OneWay}"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column price per kg -->
                    <DataGridTextColumn x:Name="ColPriceKg" IsReadOnly="True"
                                        Header="Cena/kg"
                                        Width="20*"
                                        Binding="{Binding PriceKg, Mode=OneWay}"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column price total -->
                    <DataGridTextColumn x:Name="ColPrice" IsReadOnly="True"
                                        Header="Cena"
                                        Binding="{Binding Price, Mode=OneWay}"
                                        Width="20*"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column VOC -->
                    <DataGridTextColumn x:Name="ColVoc" IsReadOnly="True"
                                        Header="Voc [kg]"
                                        Width="20*"
                                        Binding="{Binding VOC, Converter={StaticResource VocRoundConverter}, Mode=OneWay}"
                                        ElementStyle="{StaticResource DataGridTextCenterStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column Comments -->
                    <DataGridTextColumn x:Name="ColComment" IsReadOnly="True"
                                        Header="Komentarz"
                                        Binding="{Binding Comment, Mode=OneWay}"
                                        Width="30*"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="right">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                </DataGrid.Columns>
            
            </DataGrid>

        </Grid>
    </DockPanel>
</Window>
