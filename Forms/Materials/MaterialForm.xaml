<Window x:Class="LabBook.Forms.Materials.MaterialForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LabBook.Forms.Materials"
        xmlns:localOut="clr-namespace:LabBook.Forms.MainForm"
        xmlns:Convertors="clr-namespace:LabBook.Forms.MainForm.Converters"
        xmlns:ConvertLocal="clr-namespace:LabBook.Forms.Materials.Converters"
        xmlns:vm ="clr-namespace:LabBook.Forms.Materials.ModelView"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:wi="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        ResizeMode="CanResize"
        Title="Surowce" 
        Height="{Binding FormHeight, Mode=TwoWay}" 
        Width="{Binding FormWidth, Mode=TwoWay}"
        Top="{Binding FormYpos, Mode=TwoWay}" 
        Left="{Binding FormXpos, Mode=TwoWay}"
        WindowStartupLocation="CenterOwner">
    <i:Interaction.Triggers>
        <!-- Closing Form event -->
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <vm:ComboViewMV x:Key="combos" />
        <vm:FilterMV x:Key="filter" />
        <Convertors:NotBoolConverter x:Key="NotBoolConverter" />
        <Convertors:DataGridLenghtToDoubleConverter x:Key="DoubleConverter" />
        <Convertors:DensityConverter x:Key="DensityConverter" />
        <Convertors:DateTimeConverter x:Key="DateTimeConverter" />
        <Convertors:DataRowViewToLongConverter x:Key="RowToIdConverter" />
        <ConvertLocal:DangerToColorConverter x:Key="DengerToRedConverter" />
        <ConvertLocal:PriceToColorConverter x:Key="PriceTocColorConverter" />
        <ConvertLocal:PriceToBoldConverter x:Key="PriceToBoldConverter" />
        <ConvertLocal:CurrencyToColorConverter x:Key="CurrencyToColorConverter" />
        <ConvertLocal:CurrencyToBoldConverter x:Key="CurrencyToBoldConverter" />
        <CollectionViewSource x:Key="FunctionView" Source="{Binding GetFunctionView}" />
        <CollectionViewSource x:Key="CurrencyView" Source="{Binding GetCurrencyView}" />
        <localOut:BindingProxy x:Key="proxy" Data="{Binding}" />
        <Style x:Key="AllignCellLeft" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5 0 0 0" />
        </Style>
        <Style x:Key="AllignColmnHeaderLeft" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignColmnHeaderCenter" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignCellCenter" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="DataGridComboAllign" TargetType="{x:Type DataGridCell}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Grid>

        <!-- ToolBar -->
        <ToolBarTray x:Name="toolbar" DockPanel.Dock="Top">
            <ToolBar>
                <Button ToolTip="Nowy" ToolBar.OverflowMode="AsNeeded" Command="{Binding AddNewButton}">
                    <Image Source="/Img/new-reservation.png" Width="32" Height="32" />
                </Button>
            </ToolBar>
        </ToolBarTray>
        
        <TabControl Margin="0,83,0,4">

            <!-- Main page -->
            <TabItem Header="Strona główna">
                <Grid Background="#FFE5E5E5" >

                    <!--#### Filtering ####-->
                    <Canvas x:Name="CanvasFilterData" HorizontalAlignment="Left" Margin="0,0,0,-0.4" >
                        <CheckBox x:Name="ChbFilter" HorizontalAlignment="Left" Height="17" Margin="0,0,0,0" VerticalAlignment="Top" Width="16" 
                                  IsChecked="{Binding FilterOn, Source={StaticResource filter}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                  Canvas.Left="5" Canvas.Top="8" />
                        <TextBox x:Name="TxtNameFilter" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top"
                                 Text="{Binding Name, Source={StaticResource filter}, Mode=OneWayToSource, UpdateSourceTrigger=LostFocus}"
                                 Width="{Binding ElementName=ColName, Path=ActualWidth}" 
                                 Canvas.Left="{Binding TxtFilerNameLeftPosition, Mode=OneWay, FallbackValue=50}" 
                                 Canvas.Top="3" />
                        <ComboBox x:Name="CmbUserFilter" HorizontalAlignment="Left" VerticalAlignment="Top" HorizontalContentAlignment="Left"
                                  ItemsSource="{Binding Source={StaticResource combos}, Path=GetFunctionView}" 
                                  DisplayMemberPath="name" SelectedValuePath="id" SelectedIndex="0"
                                  SelectedValue="{Binding Function, Source={StaticResource filter}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                  Width="{Binding ElementName=ColFunction, Path=ActualWidth}" 
                                  Canvas.Left="{Binding CmbFilterFunctionLeftPosition, Mode=OneWay, FallbackValue=100}" 
                                  Canvas.Top="3" />
                        <CheckBox x:Name="ChbActiv" HorizontalAlignment="Left" Height="17" Margin="0,0,0,0" VerticalAlignment="Top"
                                  IsChecked="{Binding Active, Source={StaticResource filter}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                  Canvas.Left="{Binding ChbFilterActiveLeftPosition, Mode=OneWay, FallbackValue=300}" 
                                  Canvas.Top="8" />
                        <CheckBox x:Name="ChbDanger" HorizontalAlignment="Left" Height="17" Margin="0,0,0,0" VerticalAlignment="Top"
                                  IsChecked="{Binding Danger, Source={StaticResource filter}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                  Canvas.Left="{Binding ChbFilterDangerLeftPosition, Mode=OneWay, FallbackValue=370}" 
                                  Canvas.Top="8" />
                        <CheckBox x:Name="ChbProd" HorizontalAlignment="Left" Height="17" Margin="0,0,0,0" VerticalAlignment="Top"
                                  IsChecked="{Binding Production, Source={StaticResource filter}, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                  Canvas.Left="{Binding ChbFilterProdLeftPosition, Mode=OneWay, FallbackValue=420}" 
                                  Canvas.Top="8" />

                    </Canvas>

                        <!--#### Main DataGrid ####-->
                    <DataGrid x:Name="DgMaterials" Margin="5,28,5,1.6" ItemsSource="{Binding GetMaterialView}" HorizontalAlignment="Stretch" 
                              AutoGenerateColumns="False" ColumnWidth="*" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True"
                              CanUserAddRows="False"  CanUserResizeColumns="True" CanUserResizeRows="False" RowHeight="22"
                              FrozenColumnCount="1" HeadersVisibility="Column" 
                              SelectedIndex="{Binding DgRowIndex, Mode=TwoWay, FallbackValue=0}"
                              SelectedItem="{Binding ActualRow, Mode=OneWayToSource}" 
                              SelectedValue="{Binding MaterialId, Converter={StaticResource RowToIdConverter}, Mode=OneWayToSource}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <cmd:EventToCommand Command="{Binding OnSelectionChangedCommand}" PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding currency_id}" Visibility="Collapsed" />
                            <DataGridTextColumn Binding="{Binding unit_id}" Visibility="Collapsed" />

                            <DataGridTemplateColumn x:Name="ColStatus" HeaderStyle="{StaticResource AllignColmnHeaderCenter}" 
                                                    IsReadOnly="True" CanUserSort="False" CanUserResize="False"
                                                    Width="32">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <StackPanel Background="#FFE5E5E5" >
                                            <Image x:Name="ArrowRight" Width="18" Height="16" Margin="1,1,1,1" Source="/Img/arrow-right.png" 
                                                   Visibility="Hidden">
                                            </Image>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" >
                                                <Setter TargetName="ArrowRight" Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn x:Name="ColName" 
                                                Header="Nazwa"
                                                Binding="{Binding name, Mode=TwoWay}"
                                                IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}"
                                                Width="{Binding Data.ColumnName, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{Binding is_danger, Converter={StaticResource DengerToRedConverter}}"/>
                                        <Setter Property="FontSize" Value="12" />
                                        <Setter Property="HorizontalAlignment" Value="Left" />
                                        <Setter Property="Padding" Value="5 0 0 0" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridComboBoxColumn x:Name="ColFunction"
                                                    CanUserSort="False"
                                                    Header="Funkcja"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                    IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}"
                                                    Width="{Binding Data.ColumnFunction, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                    ItemsSource="{Binding Source={StaticResource combos}, Path=GetFunctionView}"
                                                    SelectedValuePath="id"
                                                    DisplayMemberPath="name"
                                                    SelectedValueBinding="{Binding function_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=1}" />

                            <DataGridTextColumn Header="Cena"
                                                CanUserSort="False"
                                                Binding="{Binding price, Mode=TwoWay, Converter={StaticResource DensityConverter}}"
                                                IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}"
                                                Width="{Binding Data.ColumnPrice, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                HeaderStyle="{StaticResource AllignColmnHeaderCenter}" 
                                                ElementStyle="{StaticResource AllignCellCenter}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="FontWeight" Value="{Binding price, Converter={StaticResource PriceToBoldConverter}}" />
                                            <Style.Triggers>
                                                <Trigger Property="DataGridCell.IsSelected" Value="False">
                                                    <Setter Property="Background" Value="{Binding price, Converter={StaticResource PriceTocColorConverter}}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTemplateColumn Header="Waluta"
                                                    CanUserSort="False"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                    Width="{Binding Data.ColumnCurrency, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                    IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={StaticResource combos}, Path=GetCurrencyView}" HorizontalContentAlignment="Center"
                                                  FontSize="10"
                                                  SelectedValuePath="id"
                                                  DisplayMemberPath="name" 
                                                  SelectedValue="{Binding currency_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=1}" >
                                            <ComboBox.Style>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="Foreground" Value="{Binding currency_id, Mode=OneWay, Converter={StaticResource CurrencyToColorConverter}}" />
                                                    <Setter Property="FontWeight" Value="{Binding currency_id, Mode=OneWay, Converter={StaticResource CurrencyToBoldConverter}}" />
                                                </Style>
                                            </ComboBox.Style>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Jedn."
                                                    CanUserSort="False"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                    Width="{Binding Data.ColumnUnit, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                    IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Source={StaticResource combos}, Path=GetUnitView}" HorizontalContentAlignment="Center"
                                                  FontSize="10"
                                                  SelectedValuePath="id"
                                                  DisplayMemberPath="name" 
                                                  SelectedValue="{Binding unit_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=1}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridCheckBoxColumn x:Name="ColAktiv" Header="Aktywny"
                                                    CanUserSort="False"
                                                    Binding="{Binding is_active, UpdateSourceTrigger=PropertyChanged}"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                    Width="{Binding Data.ColumnActive, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                    IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}" />

                            <DataGridCheckBoxColumn x:Name="ColDanger" Header="Danger"
                                                    CanUserSort="False"
                                                    Binding="{Binding is_danger, UpdateSourceTrigger=PropertyChanged}"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                    Width="{Binding Data.ColumnDenger, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                    IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}" />

                            <DataGridCheckBoxColumn Header="Prod."
                                                    CanUserSort="False"
                                                    Binding="{Binding is_production, UpdateSourceTrigger=PropertyChanged}"
                                                    HeaderStyle="{StaticResource AllignColmnHeaderCenter}"
                                                    Width="{Binding Data.ColumnProd, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                    IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}" />

                            <DataGridTextColumn x:Name="ColVOC" 
                                                Header="VOC" 
                                                CanUserSort="False"
                                                Binding="{Binding VOC, Mode=TwoWay, Converter={StaticResource DensityConverter}}"
                                                IsReadOnly="{Binding Data.IsPermited, Source={StaticResource proxy}, Converter={StaticResource NotBoolConverter}, Mode=OneWay}"
                                                Width="{Binding Data.ColumnVOC, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                ElementStyle="{StaticResource AllignCellCenter}"
                                                HeaderStyle="{StaticResource AllignColmnHeaderCenter}" >
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="FontWeight" Value="{Binding VOC, Converter={StaticResource PriceToBoldConverter}}" />
                                        <Style.Triggers>
                                            <Trigger Property="DataGridCell.IsSelected" Value="False">
                                                <Setter Property="Background" Value="{Binding VOC, Converter={StaticResource PriceTocColorConverter}}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Data zmian" Binding="{Binding date_created, Converter={StaticResource DateTimeConverter}, Mode=TwoWay}"
                                                CanUserSort="False"
                                                IsReadOnly="True"    
                                                Width="{Binding Data.ColumnData, Source={StaticResource proxy}, Converter={StaticResource DoubleConverter}, Mode=TwoWay}"
                                                ElementStyle="{StaticResource AllignCellCenter}"
                                                HeaderStyle="{StaticResource AllignColmnHeaderCenter}" />

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>

            <!-- CLP page -->
            <TabItem Header="Dane CLP" >
                <Grid Background="#FFE5E5E5" >

                </Grid>
            </TabItem>

            <!-- Recipe of material -->
            <TabItem Header="Skład" >
                <Grid Background="#FFE5E5E5" >

                </Grid>
            </TabItem>
        
        </TabControl>

    </Grid>
</Window>
