<Window x:Class="LabBook.Forms.Composition.CompositionForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LabBook.Forms.Composition"
        xmlns:localOut="clr-namespace:LabBook.Forms.MainForm"
        xmlns:mv="clr-namespace:LabBook.Forms.Composition.ModelView"
        xmlns:Convertors="clr-namespace:LabBook.Forms.MainForm.Converters"
        xmlns:ConvertorsLocal="clr-namespace:LabBook.Forms.Composition.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        ResizeMode="CanResize"
        Title="Skład receptury"
        Height="{Binding FormHeight, Mode=TwoWay}" 
        Width="{Binding FormWidth, Mode=TwoWay}"
        Top="{Binding FormYpos, Mode=TwoWay}" 
        Left="{Binding FormXpos, Mode=TwoWay}"
        WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <mv:CompositionFormMV/>
    </Window.DataContext>
    
    
    <i:Interaction.Triggers>
        <!-- Closing Form event -->
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnClosingCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <Convertors:DataGridLenghtToDoubleConverter x:Key="LengthToDoubleConverter" />
        <Convertors:DotConverter x:Key="DecimalConverter" />
        <Convertors:BoolToHiddenConverter x:Key="BoolToHiddenConverter" />
        <ConvertorsLocal:StartEndToThicknesConverter x:Key="BorderThicknesConverter" />
        <ConvertorsLocal:StartEndToBackColorConverter x:Key="BackColorConverter" />
        <ConvertorsLocal:StartEndBorderColorConverter x:Key="BorderColorConverter" />
        <ConvertorsLocal:LeftPositionConverter x:Key="LeftPositionConverter" />
        <ConvertorsLocal:MassRoundConverter x:Key="MassRoundConverter" />
        <ConvertorsLocal:VocRoundConverter x:Key="VocRoundConverter" />
        <ConvertorsLocal:PriceRoundConverter x:Key="PriceRounConverter" />
        <ConvertorsLocal:PercentRounConverter x:Key="PercentRounConverter" />
        <ConvertorsLocal:StartEndVocToBackColorConverter x:Key="BackColorVocConverter" />
        <ConvertorsLocal:SumAmountToStringConverter x:Key="SumAmountToStringConverter" />
        <ConvertorsLocal:SumPercentToColorConverter x:Key="SumPercentToColorConverter" />
        <ConvertorsLocal:OrderingToStringConverter x:Key="OrderToStrinngConveretr" />
        <ConvertorsLocal:LevelFrameVisibilityConverter x:Key="LevelVisibilityConverter" />
        <ConvertorsLocal:LevelFrameTypeConverter x:Key="LevelTypeConverter" />
        <ConvertorsLocal:LevelFrameMarginConverter x:Key="LevelMarginConverter" />
        <ConvertorsLocal:LevelFontSizeConverter x:Key="LevelFontSizeConverter" />
        <ConvertorsLocal:LevelPlusImageConverter x:Key="ShowPlusConverter" />
        <localOut:BindingProxy x:Key="proxy" Data="{Binding}" />

        <Style x:Key="AllignCellLeft" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5 0 0 0" />
        </Style>
        <Style x:Key="AllignColmnHeaderLeft" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignColmnHeaderCenter" TargetType="DataGridColumnHeader">
            <Setter Property="SeparatorBrush" Value="WhiteSmoke" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style x:Key="AllignCellCenter" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style x:Key="AllignCellContentCenter" TargetType="DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridTextLeftStyle" TargetType="TextBlock" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="3,0,0,0" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
        <Style x:Key="DataGridTextCenterStyle" TargetType="TextBlock" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Normal" />
        </Style>
    </Window.Resources>
    
    <DockPanel>
        <!-- Menu -->
        <Ribbon DockPanel.Dock="Top" FontWeight="Bold" FontSize="14" >
            <RibbonTab Header="Skład" >
                <RibbonGroup Header="Plik"  FontSize="10" >
                    <RibbonButton Label="Zapisz" LargeImageSource="/Img/save.png"  FontSize="12" FontWeight="Regular"
                                  Command="{Binding SaveButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Zapisz recepturę</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Drukuj" LargeImageSource="/Img/printer.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding PrintButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Wydrukuj recepturę</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                </RibbonGroup>
                <RibbonGroup Header="Ładowanie"  FontSize="10">
                    <RibbonButton Label="Załaduj recepturę" LargeImageSource="/Img/loadFromDB.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding LoadRecipeButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Zastąp recepturę</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Podmień składnik" LargeImageSource="/Img/loadToMaterial.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding InsertRecipeButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Wstaw za wybrany</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                </RibbonGroup>
                <RibbonGroup Header="Wstawianie" FontSize="10">
                    <RibbonButton Label="Dodaj pierwszy" LargeImageSource="/Img/addFirst.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding AddFirstButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Dodaj na początek</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Dodaj pod wybrany" LargeImageSource="/Img/addMiddle.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding AddMiddleButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Dodaj pod wybranym</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Dodaj ostatni" LargeImageSource="/Img/addLast.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding AddLastButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Dodaj ostatni</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Usuń" LargeImageSource="/Img/delete.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding DeleteButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Usuń składnik</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                </RibbonGroup>
                <RibbonGroup Header="Operacje" FontSize="10">
                    <RibbonButton Label="Przesuń w górę" LargeImageSource="/Img/moveUp.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding MoveUpButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Przesuń w górę</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Przesuń w dół" LargeImageSource="/Img/moveDown.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding MoveDownButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Przesuń w dół</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Ramka górna" LargeImageSource="/Img/recFrameUp.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding FrameUpButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Ramka górna</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Usuń ramkę" LargeImageSource="/Img/cut.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding FrameCutButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Usuń ramki</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                    <RibbonButton Label="Ramka dolna" LargeImageSource="/Img/recFrameDown.png" FontSize="12" FontWeight="Regular"
                                  Command="{Binding FrameDownButton}" >
                        <RibbonButton.ToolTip >
                            <ToolTip Background="Yellow">
                                <DockPanel Width="Auto" Height="Auto" Background="Yellow" >
                                    <TextBlock FontSize="12">Ramka dolna</TextBlock>
                                </DockPanel>
                            </ToolTip>
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                </RibbonGroup>
                <RibbonGroup Header="Obliczenia" FontSize="10">

                </RibbonGroup>

            </RibbonTab>
        </Ribbon>

        <Grid Margin="1,1,1,1" Background="#FFE5E5E5" >
            <Rectangle Grid.Row="2" Grid.ColumnSpan="2" Stroke="#FFAEAEA9" StrokeThickness="2"
                       Height="28" VerticalAlignment="Top"/>
            <Label HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,1,0,0" FontWeight="Bold" FontSize="12"  
                   Content="{Binding GetTitle, Mode=OneWay}"/>

            <!-- Setting values for recipes -->
            <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,36,0,0" Height="30"
                    Visibility="{Binding IsSemiComponent, Converter={StaticResource BoolToHiddenConverter}}">
                
                <!-- Combo with material list -->
                <ComboBox x:Name="CmbMaterial" KeyUp="ComboBox_KeyUp" TabIndex="3"
                          IsEditable="true"
                          IsTextSearchEnabled="true"
                          StaysOpenOnEdit="true"
                          Canvas.Top="4"
                          Width="{Binding ElementName=ColMaterial, Path=ActualWidth}"
                          Text="{Binding ComponentName, UpdateSourceTrigger=LostFocus}"
                          ItemsSource="{Binding GetMatrials}" 
                          DisplayMemberPath="name">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="cmbMaterial">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </ComboBox>
                
                <!-- TextBox with % amount -->
                <TextBox x:Name="TxtAmount" TextWrapping="Wrap" FontWeight="Bold" Padding="0,3,0,0"
                         IsEnabled="true" KeyUp="TxtBox_KeyUp" TabIndex="0"
                         Height="22"
                         Canvas.Top="4"
                         Width="{Binding ElementName=ColAmountPr, Path=ActualWidth}"
                         Text="{Binding ComponentPercent, Mode=TwoWay, Converter={StaticResource DecimalConverter} }" 
                         Visibility="{Binding AmountMode, Converter={StaticResource BoolToHiddenConverter}}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtAmount">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>
                
                <!-- TextBox with mass amount -->
                <TextBox x:Name="TxtMass" TextWrapping="Wrap" FontWeight="Bold" Padding="0,3,0,0"
                         IsEnabled="true" KeyUp="TxtBox_KeyUp" TabIndex="0"
                         Height="22"
                         Canvas.Top="4"
                         Width="{Binding ElementName=ColAmountMass, Path=ActualWidth}"
                         Text="{Binding ComponentMass, Mode=TwoWay, Converter={StaticResource DecimalConverter} }" 
                         Visibility="{Binding MassMode, Converter={StaticResource BoolToHiddenConverter}}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtMass">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>

                <!-- RadioButton to set by amount -->
                <RadioButton x:Name="RdMaterial" Content="Ilość" FontWeight="Bold" GroupName="Amonut"
                             Canvas.Top="8"
                             IsChecked="{Binding AmountMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="rdAmount">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </RadioButton>

                <!-- RadioButton to set by mass -->
                <RadioButton x:Name="RdSemiproduct" Content="Masa" FontWeight="Bold" GroupName="Amonut"
                             Canvas.Top="8"
                             IsChecked="{Binding MassMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="rdMass">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </RadioButton>

                <!-- TxtComment to set comments -->
                <TextBox x:Name="TxtComment" TextWrapping="Wrap" FontWeight="Bold" Padding="0,3,0,0"
                         IsEnabled="true" TabIndex="1"
                         Height="22"
                         Canvas.Top="4"
                         Width="{Binding ElementName=ColComment, Path=ActualWidth}"
                         Text="{Binding SelectedItem.Comment, ElementName=DgMaterials, Mode=TwoWay, Converter={StaticResource DecimalConverter} }" 
                         KeyUp="TxtBox_KeyUp" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtComment">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>

            </Canvas>

            <!-- Main Data Grid -->
            <DataGrid x:Name="DgMaterials" Margin="2,70,2,45"  HorizontalAlignment="Stretch" AutoGenerateColumns="False" 
                      ColumnWidth="*" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True"
                      CanUserAddRows="False"  CanUserResizeColumns="True" CanUserResizeRows="False" RowHeight="22"
                      FrozenColumnCount="1" HeadersVisibility="Column" TabIndex="4"
                      SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                      ItemsSource="{Binding Recipe}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <cmd:EventToCommand Command="{Binding OnMouseUpCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <DataGrid.Columns>

                    <DataGridTextColumn x:Name="ColSemiProd" Binding="{Binding IsSemiProduct}" Visibility="Collapsed" />
                    <DataGridTextColumn x:Name="ColOperation" Binding="{Binding Operation}" Visibility="Collapsed" />
                    <DataGridTextColumn x:Name="ColLevel" Binding="{Binding Level}" Visibility="Collapsed" />
                    <DataGridTextColumn x:Name="ColSemiStatus" Binding="{Binding SemiStatus}" Visibility="Hidden" />

                    <!-- Column status -->
                    <DataGridTemplateColumn x:Name="ColStatus" IsReadOnly="True" CanUserSort="False" CanUserResize="False"
                                            Width="24">
                        <DataGridTemplateColumn.CellStyle >
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="#FFE5E5E5" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                <Setter Property="Margin" Value="0,0,-1,0" />
                            </Style>
                        </DataGridTemplateColumn.CellStyle>

                        <DataGridTemplateColumn.HeaderStyle >
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" >
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="SeparatorBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="1,1,0,1" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <StackPanel Background="#FFE5E5E5" VerticalAlignment="Center" HorizontalAlignment="Right" >
                                    <Image x:Name="ArrowRight" Width="18" Height="16" Margin="0" Source="/Img/arrow-right.png" 
                                                   Visibility="Hidden" >
                                    </Image>
                                </StackPanel>
                                
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True" >
                                        <Setter TargetName="ArrowRight" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Column [+] and [-]-->
                    <DataGridTemplateColumn x:Name="ColSemiRecipe" IsReadOnly="True" CanUserSort="False" 
                                            CanUserResize="False" Width="10" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >
                                <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left" >
                                    <TextBlock FontSize="12" Margin="0,2,0,0" FontWeight="Bold"
                                               Text ="{Binding SemiStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                               HorizontalAlignment="Left" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <DataGridTemplateColumn.HeaderStyle >
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="SeparatorBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,1,1,1" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>


                        <DataGridTemplateColumn.CellStyle >
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="#FFE5E5E5" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderThickness" Value="0,0,0,0" />
                                <Setter Property="Margin" Value="-1,0,0,0" />
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                    
                    <!-- Column L.P. -->
                    <DataGridTextColumn x:Name="ColLP" IsReadOnly="True" CanUserSort="False"
                                        Header="L.P."
                                        Width="5*"
                                        HeaderStyle="{StaticResource AllignColmnHeaderCenter}" >
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource OrderToStrinngConveretr}" >
                                <Binding Path="Level" />
                                <Binding Path="Ordering" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" >
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                               <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="left">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>

                                <!-- Another possibility to chahge color and thickness of GridCell, depends from another rules
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Operation}" Value="2"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFFFF700" />
                                        <Setter Property="BorderBrush" Value="Blue" />
                                        <Setter Property="BorderThickness" Value="2,2,0,0" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Operation}" Value="3"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFFFF700" />
                                        <Setter Property="BorderBrush" Value="Blue" />
                                        <Setter Property="BorderThickness" Value="2,0,0,0" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Operation}" Value="4"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFFFF700" />
                                        <Setter Property="BorderBrush" Value="Blue" />
                                        <Setter Property="BorderThickness" Value="2,0,0,2" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                                -->
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column material name -->
                    <DataGridTemplateColumn x:Name="ColMaterial" IsReadOnly="True" CanUserSort="False"
                                            Header="Surowiec"
                                            Width="50*"
                                            HeaderStyle="{StaticResource AllignColmnHeaderLeft}">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" >
                                    <Image Margin="{Binding Level, Converter={StaticResource LevelMarginConverter}, Mode=OneWay}" 
                                           Width="{Binding ElementName=DgMaterials, Path=RowHeight, Mode=OneWay}" 
                                           Height="{Binding ElementName=DgMaterials, Path=RowHeight, Mode=OneWay}"
                                           Visibility="{Binding Level, Converter={StaticResource LevelVisibilityConverter}, Mode=OneWay}"
                                           Source="{Binding SubOrdering, Converter={StaticResource LevelTypeConverter}, Mode=OneWay}" />
                                    <TextBlock Padding="3,0,0,0" VerticalAlignment="Center"
                                               FontSize="{Binding Level, Converter={StaticResource LevelFontSizeConverter}, Mode=OneWay}"
                                               Text="{Binding Name, Mode=OneWay}" />
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                        <!-- Style in material Cell -->
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell" >
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="True" >
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                                     
                    <!-- Column amount in % -->
                    <DataGridTextColumn x:Name="ColAmountPr" IsReadOnly="True" CanUserSort="False"
                                        Header="Ilość [%]" Width="20*"
                                        Binding="{Binding Amount, Converter={StaticResource PercentRounConverter}, Mode=OneWay}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >

                        <!-- Style inside cell - text only -->
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{Binding Level, Converter={StaticResource LevelFontSizeConverter}}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3,0,0,0" />
                                <Setter Property="FontWeight" Value="Normal" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        
                        <!-- Whole cell style -->
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column amount in kg -->
                    <DataGridTextColumn x:Name="ColAmountMass" IsReadOnly="True" CanUserSort="False"
                                        Header="Masa [kg]"
                                        Width="20*"
                                        Binding="{Binding Mass, Converter={StaticResource MassRoundConverter}, Mode=OneWay}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        
                        <!-- Style inside cell - text only -->
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{Binding Level, Converter={StaticResource LevelFontSizeConverter}}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3,0,0,0" />
                                <Setter Property="FontWeight" Value="Normal" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                        <!-- Whole cell style -->
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column price per kg -->
                    <DataGridTextColumn x:Name="ColPriceKg" IsReadOnly="True" CanUserSort="False"
                                        Header="Cena/kg"
                                        Width="20*"
                                        Binding="{Binding PriceKg, Converter={StaticResource PriceRounConverter}, Mode=OneWay}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >

                        <!-- Style inside cell - text only -->
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{Binding Level, Converter={StaticResource LevelFontSizeConverter}}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3,0,0,0" />
                                <Setter Property="FontWeight" Value="Normal" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                        <!-- Whole cell style -->
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}" ConverterParameter="true">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                            <Binding Path="PriceKg" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column price total -->
                    <DataGridTextColumn x:Name="ColPrice" IsReadOnly="True" CanUserSort="False"
                                        Header="Cena"
                                        Width="20*"
                                        Binding="{Binding Price, Converter={StaticResource PriceRounConverter}, Mode=OneWay}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >

                        <!-- Style inside cell - text only -->
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{Binding Level, Converter={StaticResource LevelFontSizeConverter}}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3,0,0,0" />
                                <Setter Property="FontWeight" Value="Normal" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                        <!-- Whole cell style -->
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}" ConverterParameter="true">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                            <Binding Path="PriceKg" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column VOC -->
                    <DataGridTextColumn x:Name="ColVoc" IsReadOnly="True" CanUserSort="False"
                                        Header="Voc [kg]"
                                        Width="20*"
                                        Binding="{Binding VOC, Converter={StaticResource VocRoundConverter}, Mode=OneWay}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >

                        <!-- Style inside cell - text only -->
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{Binding Level, Converter={StaticResource LevelFontSizeConverter}}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Padding" Value="3,0,0,0" />
                                <Setter Property="FontWeight" Value="Normal" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                        <!-- Whole cell style -->
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorVocConverter}" ConverterParameter="true">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                            <Binding Path="VOC" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="mid">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                    <!-- Column Comments -->
                    <DataGridTextColumn x:Name="ColComment" IsReadOnly="True" CanUserSort="False"
                                        Header="Komentarz"
                                        Binding="{Binding Comment, Mode=OneWay}"
                                        Width="30*"
                                        ElementStyle="{StaticResource DataGridTextLeftStyle}"
                                        HeaderStyle="{StaticResource AllignColmnHeaderLeft}" >
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <!-- ForeColor - white when selected -->
                                <Style.Triggers>
                                    <Trigger Property="DataGridCell.IsSelected" Value="true">
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                                <!-- BackGround color - yellow/white or blue selected -->
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BackColorConverter}">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border color around Star/End area -->
                                <Setter Property="BorderBrush" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderColorConverter}" >
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <!-- Border thiskness around Start/End area -->
                                <Setter Property="BorderThickness" >
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource BorderThicknesConverter}" ConverterParameter="right">
                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsSelected"/>
                                            <Binding Path="Operation"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>

                </DataGrid.Columns>
            
            </DataGrid>

            <!-- Sum of recipe data -->
            <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="45" >
                
                <!-- Density -->
                <Label Canvas.Left="5" Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="0,0,0,2" 
                       Content="{Binding GetDensity, Mode=OneWay}" />

                <!-- Caption 'SUMA' -->
                <Label Content="SUMA:" Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="0,0,0,2" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="SumText">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>

                </Label>

                <!-- Sum of % -->
                <Label Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="5,0,0,2"
                       Content="{Binding GetSumPercent, Mode=OneWay, Converter={StaticResource SumAmountToStringConverter}, ConverterParameter='Percent'}" 
                       Foreground="{Binding GetSumPercent, Converter={StaticResource SumPercentToColorConverter}, Mode=OneWay}">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtAmount">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Sum of mass -->
                <Label Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="5,0,0,2"
                       Content="{Binding GetSumMass, Mode=OneWay, Converter={StaticResource SumAmountToStringConverter}, ConverterParameter='Mass'}"
                       Foreground="Green">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtMass">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Caption 'MASA' -->
                <Label Content="MASA:" Canvas.Top="21" FontSize="14" FontWeight="Bold" Padding="0,0,0,2" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="MasaText">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Set total mass -->
                <TextBox Canvas.Top="20" FontWeight="Bold" Padding="5,0,0,2" Foreground="Black" FontSize="14" KeyUp="TxtBox_KeyUp"
                         Width="{Binding ElementName=ColAmountMass, Path=ActualWidth}" TabIndex="2"
                         Text="{Binding GetTotalMass, Mode=TwoWay, Converter={StaticResource DecimalConverter}}"
                         IsEnabled="{Binding AmountMode, Mode=OneWay}">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtMass">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </TextBox>

                <!-- Caption 'Cena/kg' -->
                <Label Content="Cena/kg:" Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="0,0,0,2" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtPriceKg">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Price per kg -->
                <Label Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="5,0,0,2"
                       Content="{Binding GetPricePerKg, Mode=OneWay, Converter={StaticResource SumAmountToStringConverter}, ConverterParameter='Price'}"
                       Foreground="Green">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtPrice">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Caption 'Cena/l' -->
                <Label Content="Cena/l:" Canvas.Top="22" FontSize="14" FontWeight="Bold" Padding="0,0,0,2" >
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtPriceL">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Price per l -->
                <Label Canvas.Top="22" FontSize="14" FontWeight="Bold" Padding="5,0,0,2"
                       Content="{Binding GetPricePerL, Mode=OneWay, Converter={StaticResource SumAmountToStringConverter}, ConverterParameter='PriceKg'}"
                       Foreground="Green">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtPrice">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Sum of VOC -->
                <Label Canvas.Top="0" FontSize="14" FontWeight="Bold" Padding="5,0,0,2"
                       Content="{Binding GetSumVoc, Mode=OneWay, Converter={StaticResource SumAmountToStringConverter}, ConverterParameter='Voc'}"
                       Foreground="Green">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtVoc">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

                <!-- Sum of VOC g/l -->
                <Label Canvas.Top="22" FontSize="14" FontWeight="Bold" Padding="5,0,0,2"
                       Content="{Binding GetSumVocPerLiter, Mode=OneWay, Converter={StaticResource SumAmountToStringConverter}, ConverterParameter='VocPerL'}"
                       Foreground="Green">
                    <Canvas.Left>
                        <MultiBinding Converter="{StaticResource LeftPositionConverter}" ConverterParameter="txtVoc">
                            <Binding ElementName="ColStatus" Path="ActualWidth" />
                            <Binding ElementName="ColLP" Path="ActualWidth" />
                            <Binding ElementName="ColMaterial" Path="ActualWidth" />
                            <Binding ElementName="ColAmountPr" Path="ActualWidth" />
                            <Binding ElementName="ColAmountMass" Path="ActualWidth" />
                            <Binding ElementName="ColPriceKg" Path="ActualWidth" />
                            <Binding ElementName="ColPrice" Path="ActualWidth" />
                            <Binding ElementName="RdSemiproduct" Path="ActualWidth" />
                            <Binding ElementName="ColVoc" Path="ActualWidth" />
                            <Binding ElementName="ColSemiRecipe" Path="ActualWidth" />
                        </MultiBinding>
                    </Canvas.Left>
                </Label>

            </Canvas>
            
        </Grid>
    </DockPanel>
</Window>
